generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE")
}

enum DisputeMethod {
  Modal
  Link
}

enum InfractionType {
  Warn
  Mute
  Kick
  Ban
  Unmute
  Unban
}

model Guild {
  id                             String          @id
  infractionModeratorPublic      Boolean         @default(false)
  notifyInfractionChange         Boolean         @default(false)
  disputeAllowed                 Boolean         @default(false)
  disputeAlertWebhookId          String?
  disputeMethod                  DisputeMethod   @default(Modal)
  disputeLink                    String?
  disputeModalQuestions          String[]        @default(["Reason for dispute."])
  disregardDisputeAfter          BigInt          @default(2592000000)
  disputeBlacklist               String[]
  logWebhookId                   String?
  infoWarn                       String?
  infoMute                       String?
  infoKick                       String?
  infoBan                        String?
  autoModSpamToggle              Boolean         @default(false)
  autoModSpamTriggers            Json[]          @default(["{ \"amount\": 5, \"within\": 5 }", "{ \"amount\": 10, \"within\": 20 }"])
  autoModSpamImmuneChannels      String[]
  autoModSpamImmuneRoles         String[]
  autoModSpamPunishment          InfractionType?
  autoModSpamDuration            BigInt          @default(0)
  autoModMaliciousToggle         Boolean         @default(false)
  autoModMaliciousImmuneChannels String[]
  autoModMaliciousImmuneRoles    String[]
  autoModMaliciousPunishment     InfractionType?
  autoModMaliciousDuration       BigInt          @default(0)

  infractions Infraction[]
  disputes    Dispute[]
  tasks       Task[]
}

model Infraction {
  id          Int            @id @default(autoincrement())
  userId      String
  guildId     String
  type        InfractionType @default(Warn)
  date        BigInt
  expires     BigInt?
  reason      String         @default("Unspecified reason.")
  moderatorId String         @default("833792285120528394")

  dispute Dispute?
  guild   Guild    @relation(fields: [guildId], references: [id], onDelete: Cascade)
}

model Task {
  id      Int            @id @default(autoincrement()) @map("_id")
  userId  String
  guildId String
  type    InfractionType
  expires BigInt
  missed  Boolean        @default(false)
  guild   Guild          @relation(fields: [guildId], references: [id], onDelete: Cascade)

  @@unique([userId, guildId, type])
}

model Dispute {
  id       Int    @id
  userId   String
  guildId  String
  response Json[]

  infraction Infraction? @relation(fields: [id], references: [id], onDelete: Cascade)
  guild      Guild       @relation(fields: [guildId], references: [id], onDelete: Cascade)
}
